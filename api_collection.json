{
	"info": {
		"_postman_id": "9f82169f-b698-4a8b-94fe-0f097fa51196",
		"name": "api_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cce4a644-1163-482a-bc2f-71af92b1a2dd",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"token\", jsonData.data.token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Logged in sucessflly\", function () {",
							"    // var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Login successful.\");",
							"});",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"token\",",
							"                \"email\",",
							"                \"account_id\",",
							"                \"profile_type\",",
							"                \"profile_id\",",
							"                \"forum_token\"",
							"            ],",
							"            \"properties\": {",
							"                \"token\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"email\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"profile_type\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"profile_id\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema Validation', function() {",
							"    var result=tv4.validateResult(jsonData, schema);",
							" ",
							"    if(!result.valid){",
							"        console.log(result);",
							"    }",
							" ",
							"    pm.expect(result.valid).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"email\": \"{{email_id}}\",\n\"password\": \"{{password}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/accounts/login/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "create project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1aa02d8b-ddf2-4af4-b309-3b952d9444ff",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"project_id\", jsonData.data.id);",
							"pm.environment.set(\"publish_key\", jsonData.data.publish_key);",
							"pm.environment.set(\"secret_api_key\", jsonData.data.secret_api_key);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Project added successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Project added successfully.\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"name\",",
							"                \"webhook_url\",",
							"                \"slack_url\",",
							"                \"hangout_url\",",
							"                \"is_webhook_active\",",
							"                \"is_slack_active\",",
							"                \"is_hangout_active\",",
							"                \"image\",",
							"                \"account_id\",",
							"                \"secret_api_key\",",
							"                \"publish_key\",",
							"                \"created_at\",",
							"                \"updated_at\",",
							"                \"apps\",",
							"                \"created_by\",",
							"                \"is_deleted\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_webhook_active\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"is_slack_active\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"is_hangout_active\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"secret_api_key\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"publish_key\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"apps\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"undefined\"",
							"                    }",
							"                },",
							"                \"created_by\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_deleted\": {",
							"                    \"type\": \"boolean\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"   ",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"automation test project\"\n}"
				},
				"url": {
					"raw": "{{host}}//v1/projects/",
					"host": [
						"{{host}}"
					],
					"path": [
						"",
						"v1",
						"projects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update project name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dfca1034-7a8b-458f-adb6-58be88906007",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Project updated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Project updated successfully.\");",
							"});",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"name\",",
							"                \"webhook_url\",",
							"                \"slack_url\",",
							"                \"hangout_url\",",
							"                \"is_webhook_active\",",
							"                \"is_slack_active\",",
							"                \"is_hangout_active\",",
							"                \"image\",",
							"                \"account_id\",",
							"                \"secret_api_key\",",
							"                \"publish_key\",",
							"                \"created_at\",",
							"                \"updated_at\",",
							"                \"apps\",",
							"                \"created_by\",",
							"                \"is_deleted\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"slack_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_webhook_active\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"is_slack_active\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"is_hangout_active\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"secret_api_key\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"publish_key\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"apps\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"undefined\"",
							"                    }",
							"                },",
							"                \"created_by\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_deleted\": {",
							"                    \"type\": \"boolean\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"updated postman automated proj\",\n\t\n\"slack_url\":\"https://hooks.slack.com/services/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\",\n\n\"is_slack_active\":true\n}"
				},
				"url": {
					"raw": "{{host}}/v1/projects/{{project_id}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"{{project_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "715e608c-d59b-4aec-8833-027f2b01927e",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Success.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"id\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"name\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"is_webhook_active\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"is_slack_active\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"is_hangout_active\": {",
							"                        \"type\": \"boolean\"",
							"                    },",
							"                    \"account_id\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"secret_api_key\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"publish_key\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"created_at\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"updated_at\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"apps\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                        }",
							"                    },",
							"                    \"created_by\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"is_deleted\": {",
							"                        \"type\": \"boolean\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "token  {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/projects/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Android App",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0589c1c8-7d3d-427e-8c50-d676ab44ef3f",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"app_id_android\", jsonData.data.app_id);",
							"pm.environment.set(\"package_name\", jsonData.data.package_name);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"App added successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"App added successfully.\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"name\",",
							"                \"app_id\",",
							"                \"app_platform\",",
							"                \"account_id\",",
							"                \"created_at\",",
							"                \"updated_at\",",
							"                \"gcm_fcm_key\",",
							"                \"created_by\",",
							"                \"bundle_id\",",
							"                \"package_name\",",
							"                \"apns_url\",",
							"                \"is_deleted\"",
							"            ],",
							"            \"properties\": {",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"app_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"app_platform\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"package_name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_deleted\": {",
							"                    \"type\": \"boolean\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token  {{token}}"
					},
					{
						"key": "project_id",
						"type": "text",
						"value": "",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Android app\",\n\t\"app_platform\": 1,\n\t\"package_name\": \"com.geospark.android\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/projects/{{project_id}}/apps/?",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"{{project_id}}",
						"apps",
						""
					],
					"query": [
						{
							"key": "project_id",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get android app",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1397d482-2b6f-4a34-969b-7836c5a890e8",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Get app success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var schema= {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"name\",",
							"                \"app_id\",",
							"                \"app_platform\",",
							"                \"account_id\",",
							"                \"created_at\",",
							"                \"updated_at\",",
							"                \"gcm_fcm_key\",",
							"                \"created_by\",",
							"                \"bundle_id\",",
							"                \"package_name\",",
							"                \"apns_url\",",
							"                \"is_deleted\"",
							"            ],",
							"            \"properties\": {",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"app_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"app_platform\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"package_name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_deleted\": {",
							"                    \"type\": \"boolean\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('schema validation', function(){",
							"    pm.expect(tv4.validate(schema, jsonData)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/projects/{{project_id}}/apps/{{app_id_android}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"{{project_id}}",
						"apps",
						"{{app_id_android}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create iOS app",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "738b92c2-f947-4091-adc0-5333912624ee",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"app_id_ios\", jsonData.data.app_id);",
							"pm.environment.set(\"bundle_id\", jsonData.data.bundle_id);",
							"",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"App added successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"App added successfully.\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"name\",",
							"                \"app_id\",",
							"                \"app_platform\",",
							"                \"account_id\",",
							"                \"created_at\",",
							"                \"updated_at\",",
							"                \"gcm_fcm_key\",",
							"                \"created_by\",",
							"                \"bundle_id\",",
							"                \"package_name\",",
							"                \"apns_url\",",
							"                \"is_deleted\"",
							"            ],",
							"            \"properties\": {",
							"                \"name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"app_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"app_platform\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"bundle_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_deleted\": {",
							"                    \"type\": \"boolean\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token  {{token}}"
					},
					{
						"key": "project_id",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"Test APP iOS\",\n\t\"app_platform\": 2,\n\t\"bundle_id\": \"com.storyboard.geoSparkExample-iOS\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/projects/{{project_id}}/apps/?",
					"host": [
						"{{host}}"
					],
					"path": [
						"",
						"v1",
						"projects",
						"{{project_id}}",
						"apps",
						""
					],
					"query": [
						{
							"key": "project_id",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "roll_pk",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3db0cc8a-6514-4254-96de-d44e991d1a14",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"publish_key\", jsonData.data.publish_key);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Publish key rolled successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Publish key rolled successfully.\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"publish_key\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"publish_key\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"project_id\": \"{{project_id}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/projects/roll/pk/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"roll",
						"pk",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Roll_api_key",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "631fec0e-ab8a-4afa-a571-01262e3e73cf",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"secret_api_key\", jsonData.data.secret_api_key);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"API key rolled successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"API key rolled successfully.\");",
							"});",
							"",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"secret_api_key\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"secret_api_key\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test(\"schema validation\", function(){",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"project_id\": \"{{project_id}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/projects/roll/apikey/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"roll",
						"apikey",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "generate_SDK_token_using_bundle_id Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5a624078-b1c3-495d-95c5-5ef5a19f90ec",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"sdk_token\", jsonData.data.sdk_token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Token generated successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Token generated successfully\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"sdk_token\"",
							"            ],",
							"            \"properties\": {",
							"                \"sdk_token\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test(\"schema validation\", function(){",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "36ca24f3-3690-406c-8ec1-c014b454d65d",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"publish_key\": \"{{publish_key}}\",\n  \"bundle_id\": \"{{bundle_id}}\"\n}\n\n"
				},
				"url": {
					"raw": "{{host}}//v1/user/token/",
					"host": [
						"{{host}}"
					],
					"path": [
						"",
						"v1",
						"user",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Register user device",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "63018925-3df3-43df-bff4-7e55052f1437",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"user_id\", jsonData.data.user_id);",
							"",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"User tracking initated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"User tracking initated successfully.\");",
							"});",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"user_id\"",
							"            ],",
							"            \"properties\": {",
							"                \"user_id\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test(\"schema validation\", function(){",
							"    pm.expect(tv4.validate(jsonData,schema)).to.be.true;",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"device_token\":\"devicetoken\",\n\t\"description\": \"postman device test\",\n\t\"brand\": \"Samsung\",\n\t\"model\": \"S8\",\n\t\"os_version\": \"8.1\",\n\t\"sdk_version\": \"2.1\"\n}"
				},
				"url": {
					"raw": "{{host}}//v1/user/",
					"host": [
						"{{host}}"
					],
					"path": [
						"",
						"v1",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE GEOFENCE",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "876bf6cd-e0f9-4672-80b6-959e0a8cf2fc",
						"exec": [
							"// var i= pm.environment.get(\"itr\"); ",
							"// if(i<2){",
							"//     pm.sendRequest('CREATE GEOFENCE');}",
							"//     else{pm.environment.unset(\"itr\");}",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"geofence_id\", jsonData.data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Geofence Added successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Geofence Added successfully.\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"account_id\",",
							"                \"project_id\",",
							"                \"geometry_type\",",
							"                \"geometry_radius\",",
							"                \"geometry_center\",",
							"                \"description\",",
							"                \"created_at\",",
							"                \"updated_at\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"project_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"geometry_type\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"geometry_radius\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"geometry_center\": {",
							"                    \"required\": [",
							"                        \"type\",",
							"                        \"coordinates\"",
							"                    ],",
							"                    \"properties\": {",
							"                        \"type\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"coordinates\": {",
							"                            \"type\": \"array\",",
							"                            \"items\": {",
							"                                \"type\": \"number\"",
							"                            }",
							"                        }",
							"                    },",
							"                    \"type\": \"object\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test(\"schema validation\", function(){",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f9557a09-6a79-4d2d-a6cc-906b89da5931",
						"exec": [
							"",
							"// var i = pm.environment.get(\"itr\");",
							"// if (!i){",
							"//     i=0;",
							"// }",
							"",
							"// var desc = \"geofence \" + String(i);",
							"// pm.environment.set(\"desc\", desc);",
							"// i += 1;",
							"// pm.environment.set(\"itr\", i);",
							"  ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"project_id\": \"{{project_id}}\",\n  \"geometry_type\": \"circle\",\n   \"geometry_radius\":100,\n  \"coordinates\": [ 77.635283, 12.913956] ,\n  \"description\": \"test geofence\",\n    \"color_code\": \"f44336\",\n  \"tag\": \"work\"\n\n}"
				},
				"url": {
					"raw": "{{host}}/v1/geofence/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"geofence",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update geofence",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3664a23b-bd53-413a-817f-65776b37a8ad",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Geofence updated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Geofence updated successfully.\");",
							"});",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"account_id\",",
							"                \"project_id\",",
							"                \"geometry_type\",",
							"                \"geometry_radius\",",
							"                \"geometry_center\",",
							"                \"is_enabled\",",
							"                \"description\",",
							"                \"created_at\",",
							"                \"updated_at\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"project_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"geometry_type\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"geometry_radius\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"geometry_center\": {",
							"                    \"required\": [",
							"                        \"type\",",
							"                        \"coordinates\"",
							"                    ],",
							"                    \"properties\": {",
							"                        \"type\": {",
							"                            \"type\": \"string\"",
							"                        },",
							"                        \"coordinates\": {",
							"                            \"type\": \"array\",",
							"                            \"items\": {",
							"                                \"type\": \"number\"",
							"                            }",
							"                        }",
							"                    },",
							"                    \"type\": \"object\"",
							"                },",
							"                \"is_enabled\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"description\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test(\"schema validation\", function(){",
							"    pm.expect(tv4.validate(jsonData,schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Postman-Token",
						"value": "6b4550bd-d025-48f0-83cf-dea853ea30af",
						"disabled": true
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"is_enabled\": true\n}"
				},
				"url": {
					"raw": "{{host}}/v1/geofence/{{geofence_id}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"geofence",
						"{{geofence_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update location",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cb9b02a5-2766-4d81-8edf-78be038f1a09",
						"exec": [
							"",
							"pm.environment.set(\"iso_time\",(new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4cf73aaa-a764-412a-840b-bd7fdefff007",
						"exec": [
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"location recorded successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"location recorded successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\t[{\n\t    \"user_id\": \"{{user_id}}\" ,\n\t    \"latitude\": 12.914478,\n\t    \"longitude\": 77.635536,\n\t    \"speed\": 10.23,\n\t    \"accuracy\": 0.23,\n\t    \"altitude\": 23.33,\n\t    \"gps_stat\": true,\n\t    \"net_stat\": true,\n\t    \"motion_stat\": true,\n\t    \"app_stat\": \"B\",\n\t    \"activity\": \"W\",\n\t    \"bat_stat\": \"Unplugged\",\n\t    \"battery_remaining\":1,\n\t    \"address\": \"301 patel nest , bangalore 560102\",\n\t    \"city\": \"bangalore\",\n\t    \"state\": \"karnataka\",\n\t    \"street_address\": \"24th main garden layout\",\n\t    \"country_code\": \"IN\",\n\t    \"country\": \"India\",\n\t    \"postal_code\": 5830104,\n\t    \"timezone_offset\": \"+0530\",\n\t    \"recorded_at\": \"{{iso_time}}\" }\n\t    ]"
				},
				"url": {
					"raw": "{{host}}/v1/location/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"location",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update stop point",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cb9b02a5-2766-4d81-8edf-78be038f1a09",
						"exec": [
							"",
							"pm.environment.set(\"iso_time\",(new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4cf73aaa-a764-412a-840b-bd7fdefff007",
						"exec": [
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"location recorded successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"location recorded successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\t[{\n\t    \"user_id\": \"{{user_id}}\" ,\n\t    \"latitude\": 12.914478,\n\t    \"longitude\": 77.635536,\n\t    \"speed\": 10.23,\n\t    \"accuracy\": 0.23,\n\t    \"altitude\": 23.33,\n\t    \"gps_stat\": true,\n\t    \"net_stat\": true,\n\t    \"motion_stat\": true,\n\t    \"app_stat\": \"B\",\n\t    \"activity\": \"W\",\n\t    \"bat_stat\": \"Unplugged\",\n\t    \"battery_remaining\":1,\n\t    \"address\": \"301 patel nest , bangalore 560102\",\n\t    \"city\": \"bangalore\",\n\t    \"state\": \"karnataka\",\n\t    \"street_address\": \"24th main garden layout\",\n\t    \"country_code\": \"IN\",\n\t    \"country\": \"India\",\n\t    \"postal_code\": 5830104,\n\t    \"timezone_offset\": \"+0530\",\n\t    \"started_at\":\"2019-03-12T11:58:18.821Z\",\n\t    \"ended_at\": \"{{iso_time}}\"\n\t    }]"
				},
				"url": {
					"raw": "{{host}}/v1/location/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"location",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "generate_SDK_token using package name",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5a624078-b1c3-495d-95c5-5ef5a19f90ec",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"sdk_token\", jsonData.data.sdk_token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Token generated successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Token generated successfully\");",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"sdk_token\"",
							"            ],",
							"            \"properties\": {",
							"                \"sdk_token\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"pm.test(\"schema validation\", function(){",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "36ca24f3-3690-406c-8ec1-c014b454d65d",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"publish_key\": \"{{publish_key}}\",\n  \"package_name\": \"{{package_name}}\"\n}\n\n"
				},
				"url": {
					"raw": "{{host}}/v1/user/token/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"user",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Device API",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6368aa81-25a5-45a1-a229-addc230a2d53",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"User tracking re-initated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"User tracking re-initated successfully.\");",
							"});",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"user_id\"",
							"            ],",
							"            \"properties\": {",
							"                \"user_id\": {",
							"                    \"type\": \"string\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test(\"schema validation\", function(){",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Device-Token",
						"value": "{{token}}"
					},
					{
						"key": "Postman-Token",
						"value": "38b8416f-629b-484b-99f0-83f3d7060192",
						"disabled": true
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"disabled": true
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/user/?user_id={{user_id}}&brand=ios test&model=iPhone&os_version=12.1.2&sdk_version=1.7",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"user",
						""
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id}}"
						},
						{
							"key": "brand",
							"value": "ios test"
						},
						{
							"key": "model",
							"value": "iPhone"
						},
						{
							"key": "os_version",
							"value": "12.1.2"
						},
						{
							"key": "sdk_version",
							"value": "1.7"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed user list api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee699bb5-2aec-4e11-ab09-55e9a5a5e357",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"EXposed user list\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"",
							"var user_id = pm.variables.get(\"user_id\");",
							"",
							"pm.test(\"location for given user\", function(){",
							"    pm.expect(jsonData.data.users[0].id).to.deep.equal(user_id);",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"account_id\",",
							"                \"users\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"users\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"app_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"device_token\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"description\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"brand\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"model\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"os_version\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"sdk_version\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test(\"schema validation\" , function(){",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b94aed6e-c16b-4806-a8d0-b7f2a17ce715",
						"exec": [
							"pm.environment.set(\"date\",(new Date()).toISOString().slice(0,10));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/api/user/?start_date={{date}}&timezone_offset=Asia/Kolkata",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"user",
						""
					],
					"query": [
						{
							"key": "start_date",
							"value": "{{date}}"
						},
						{
							"key": "timezone_offset",
							"value": "Asia/Kolkata"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed location api",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7e8d235b-a21c-4e28-9a93-a2fe415c5c62",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "46c78fc8-42f9-4266-a683-e1922fbc8c91",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Exposed location API\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var user_id = pm.variables.get(\"user_id\");",
							"",
							"pm.test(\"location for given user_id is present\", function(){",
							"    pm.expect(jsonData.data.user_id).to.deep.equal(user_id);",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"app_id\",",
							"                \"user_id\",",
							"                \"locations\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"app_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"user_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"locations\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"speed\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"accuracy\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"altitude\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"activity\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"timezone_offset\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"net_stat\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"gps_stat\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"motion_stat\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"app_stat\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"battery_remaining\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"bat_stat\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"address\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"state\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"city\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"street_address\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"country_code\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"country\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"postal_code\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/api/location/?user_id={{user_id}}&page_number=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"location",
						""
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"description": "(required)"
						},
						{
							"key": "Api-Key",
							"value": "",
							"disabled": true
						},
						{
							"key": "page_number",
							"value": "1",
							"description": "(optional)"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed location api for stop point",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7e8d235b-a21c-4e28-9a93-a2fe415c5c62",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "46c78fc8-42f9-4266-a683-e1922fbc8c91",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Exposed location API\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var user_id = pm.variables.get(\"user_id\");",
							"",
							"pm.test(\"location for given user_id is present\", function(){",
							"    pm.expect(jsonData.data.user_id).to.deep.equal(user_id);",
							"});",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"app_id\",",
							"                \"user_id\",",
							"                \"locations\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"app_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"user_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"locations\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"speed\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"accuracy\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"altitude\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"activity\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"timezone_offset\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"net_stat\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"gps_stat\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"motion_stat\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"app_stat\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"battery_remaining\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"bat_stat\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"address\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"state\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"city\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"street_address\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"country_code\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"country\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"postal_code\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/api/location/?user_id={{user_id}}&page_number=1&start_date=2019-03-12",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"location",
						""
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id}}",
							"description": "(required)"
						},
						{
							"key": "page_number",
							"value": "1",
							"description": "(optional)"
						},
						{
							"key": "start_date",
							"value": "2019-03-12"
						},
						{
							"key": "Api-Key",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user recent location details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b9c13f38-4f81-4d0d-a84e-d83221cddf07",
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"user recent location details\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"SDK users.\");",
							"});",
							"",
							"",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"users\"",
							"            ],",
							"            \"properties\": {",
							"                \"users\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"user_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"app_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"description\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"timezone_offset\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"app_platform\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"activity\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"started_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"ended_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"}; ",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Postman-Token",
						"value": "137d4326-17d9-44fb-b5f6-c27b6a65da9c",
						"disabled": true
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"disabled": true
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/user/{{project_id}}/?date={{date}}&page_number=1&user_id={{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"user",
						"{{project_id}}",
						""
					],
					"query": [
						{
							"key": "date",
							"value": "{{date}}"
						},
						{
							"key": "page_number",
							"value": "1"
						},
						{
							"key": "user_id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update user desc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "416a93a9-f4b6-4110-89c7-0c0717889e1a",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"User description updated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"User description updated successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"user_id\":\"{{user_id}}\",\n\t\"description\": \"postmans Phone\",\n\t\"brand\": \"Iphone\",\n\t\"model\": \"x\",\n\t\"os_version\": \"11.1.1\",\n\t\"sdk_version\": \"2.1\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/user/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Start trip",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f3e11b8b-4b10-413f-9e1d-3596522821ce",
						"exec": [
							"",
							"pm.environment.set(\"iso_time\",(new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7e8ca4ed-dda5-4442-9f0f-19fbeb0c51c9",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"trip_id\", jsonData.data.trip_id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Trip Started Successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Trip Started Successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": false
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}",
						"disabled": false
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"start\": true,\r\n\t\"user_id\": \"{{user_id}}\",\r\n\t\"trip_started_at\": \"{{iso_time}}\",\r\n\t\"description\": \"Office to empire\",\r\n    \"latitude\": 12.908136,\r\n    \"longitude\": 77.647606,\r\n    \"battery_remaining\":100,\r\n    \"speed\": 10.23,\r\n    \"accuracy\": 0.23,\r\n    \"altitude\": 23.33,\r\n    \"net_stat\": true,\r\n    \"gps_stat\":true,\r\n    \"activity\": \"W\",\r\n    \"address\": \"301 patel nest , bangalore 560102\",\r\n    \"city\": \"bangalore\",\r\n    \"state\": \"karnataka\",\r\n    \"street_address\": \"24th main garden layout\",\r\n    \"country_code\": \"IN\",\r\n    \"country\": \"India\",\r\n    \"postal_code\": 560102,\r\n    \"timezone_offset\": \"+0530\",\r\n    \"recorded_at\": \"{{iso_time}}\"\r\n}"
				},
				"url": {
					"raw": "{{host}}/v1/trips/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"trips",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update location 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cb9b02a5-2766-4d81-8edf-78be038f1a09",
						"exec": [
							"",
							"pm.environment.set(\"iso_time\",(new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4cf73aaa-a764-412a-840b-bd7fdefff007",
						"exec": [
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"location recorded successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"location recorded successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\t[{\n\t    \"user_id\": \"{{user_id}}\" ,\n\t    \"latitude\": 12.915889,\n\t    \"longitude\": 77.635338,\n\t    \"speed\": 10.23,\n\t    \"accuracy\": 0.23,\n\t    \"altitude\": 23.33,\n\t    \"gps_stat\": true,\n\t    \"net_stat\": true,\n\t    \"motion_stat\": true,\n\t    \"app_stat\": \"B\",\n\t    \"activity\": \"W\",\n\t    \"battery_remaining\":1,\n\t    \"bat_stat\": \"Unplugged\",\n\t    \"address\": \"301 patel nest , bangalore 560102\",\n\t    \"city\": \"bangalore\",\n\t    \"state\": \"karnataka\",\n\t    \"street_address\": \"24th main garden layout\",\n\t    \"country_code\": \"IN\",\n\t    \"country\": \"India\",\n\t    \"postal_code\": 5830104,\n\t    \"timezone_offset\": \"+0530\",\n\t    \"recorded_at\": \"{{iso_time}}\" }\n\t    ]"
				},
				"url": {
					"raw": "{{host}}/v1/location/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"location",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "update polyline",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cb9b02a5-2766-4d81-8edf-78be038f1a09",
						"exec": [
							"",
							"pm.environment.set(\"iso_time\",(new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "4cf73aaa-a764-412a-840b-bd7fdefff007",
						"exec": [
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"location recorded successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"location recorded successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\t[{\n\t\"user_id\": \"{{user_id}}\",\n    \"geo_encoded_polyline\": \"ojymAcezxMq{z~g{ASAs@yGf@kdFI@D\",\n    \"net_stat\": false,\n    \"activity\": \"walking\",\n    \"timezone_offset\": \"+0530\",\n    \"battery_remaining\": 25\n}\n\t    ]"
				},
				"url": {
					"raw": "{{host}}/v1/location/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"location",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get active trips",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2659ca25-1151-4a57-aa3f-684ec445174d",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"get active trips success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var trip_id = pm.variables.get('trip_id');",
							"",
							"pm.test(\"trip id validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data[0].trip_id).to.deep.equal(trip_id);",
							"});",
							"",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"trip_id\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"description\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"trip_started_at\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"start_address\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/trips/active/{{user_id}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"trips",
						"active",
						"{{user_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "end trip",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "66be7920-a6b6-42cc-9441-fea605aec7ca",
						"exec": [
							"",
							"pm.environment.set(\"iso_time\",(new Date()).toISOString());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "acb74b69-f1da-40ef-995b-489c6487af06",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"trip ended\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Trip Ended.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": false
					},
					{
						"key": "Authorization",
						"value": "token {{sdk_token}}",
						"disabled": false
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"end\": true,\r\n\t\"user_id\": \"{{user_id}}\",\r\n\t\"trip_id\":\"{{trip_id}}\",\r\n\t\"end_trip_address\":\"geospark\",\r\n\t\"trip_ended_at\": \"{{iso_time}}\",\r\n    \"latitude\": 12.916540,\r\n    \"longitude\": 77.651947,\r\n    \"battery_remaining\":50,\r\n    \"speed\": 10.23,\r\n    \"accuracy\": 0.23,\r\n    \"altitude\": 23.33,\r\n    \"net_stat\": true,\r\n    \"activity\": \"W\",\r\n    \"address\": \"geospark office hsr\",\r\n    \"gps_stat\":true,\r\n    \"city\": \"bangalore\",\r\n    \"state\": \"karnataka\",\r\n    \"street_address\": \"164 6th main\",\r\n    \"country_code\": \"IN\",\r\n    \"country\": \"India\",\r\n    \"postal_code\": 560102,\r\n    \"timezone_offset\": \"+0530\",\r\n    \"recorded_at\": \"{{iso_time}}\"\r\n}"
				},
				"url": {
					"raw": "{{host}}/v1/trips/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"trips",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get ended trips",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "15eed3ef-9d47-43f1-bff6-e3f1fd60e28c",
						"exec": [
							"pm.environment.set(\"date\",(new Date()).toISOString().slice(0,10));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b74f7065-3256-45f6-8aba-26c32190e82a",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"get ended trips success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var trip_id = pm.variables.get('trip_id');",
							"",
							"pm.test(\"trip id validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data[0].trip_id).to.deep.equal(trip_id);",
							"});",
							"",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"trip_id\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"description\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"trip_started_at\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"trip_ended_at\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"start_address\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"end_address\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"distance_covered\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"duration\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"other_trip_info\": {",
							"                        \"required\": [",
							"                            \"start_battery_remaining\",",
							"                            \"start_bat_stat\",",
							"                            \"end_battery_remaining\",",
							"                            \"end_bat_stat\"",
							"                        ],",
							"                        \"properties\": {",
							"                            \"start_battery_remaining\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"end_battery_remaining\": {",
							"                                \"type\": \"number\"",
							"                            }",
							"                        },",
							"                        \"type\": \"object\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/trips/ended/{{user_id}}/?date={{date}}&app_id={{app_id_android}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"trips",
						"ended",
						"{{user_id}}",
						""
					],
					"query": [
						{
							"key": "date",
							"value": "{{date}}"
						},
						{
							"key": "app_id",
							"value": "{{app_id_android}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed Trip List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a66a2c92-2887-492a-90ac-bbd777a9a784",
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Exposed Trip list\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var trip_id = pm.variables.get('trip_id');",
							"",
							"pm.test(\"trip_id validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.trips[0].trip_id).to.deep.equal(trip_id);",
							"});",
							"",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"trips\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"trips\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"trip_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"description\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"trip_started_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"trip_ended_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"start_address\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"end_address\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"distance_covered\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"duration\": {",
							"                                \"type\": \"number\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Api-key",
						"value": "{{secret_api_key}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/api/trip/?user_id={{user_id}}&app_id={{app_id_android}}&start_date={{date}}&end_date={{date}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"trip",
						""
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id}}"
						},
						{
							"key": "app_id",
							"value": "{{app_id_android}}"
						},
						{
							"key": "start_date",
							"value": "{{date}}"
						},
						{
							"key": "end_date",
							"value": "{{date}}"
						},
						{
							"key": "trip_type",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort_by",
							"value": "ended_at",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get trip route",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "907d596d-1506-4a94-9811-c42310a540cf",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"get trip route success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema = {",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"coordinates\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"number\"",
							"                        }",
							"                    },",
							"                    \"altitude\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"address\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"battery_remaining\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"speed\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"activity\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"recorded_at\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/trips/route/{{trip_id}}/?app_id={{app_id_android}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"trips",
						"route",
						"{{trip_id}}",
						""
					],
					"query": [
						{
							"key": "app_id",
							"value": "{{app_id_android}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed Get Trip Route",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07dbba5f-6a5a-4b7c-9fd7-b9f114edb81e",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Exposed Get trip route\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"coordinates\": {",
							"                        \"type\": \"array\",",
							"                        \"items\": {",
							"                            \"type\": \"number\"",
							"                        }",
							"                    },",
							"                    \"altitude\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"address\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"activity\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"recorded_at\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Api-key",
						"value": "{{secret_api_key}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/api/trip/route/?trip_id={{trip_id}}&app_id={{app_id_android}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"trip",
						"route",
						""
					],
					"query": [
						{
							"key": "trip_id",
							"value": "{{trip_id}}"
						},
						{
							"key": "app_id",
							"value": "{{app_id_android}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Mapmatch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "efef3a06-688c-4624-98f2-b9ac5a87a55e",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"mapmatch success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"trip_id\",",
							"                \"user_id\",",
							"                \"trip_start_time\",",
							"                \"trip_end_time\",",
							"                \"duration\",",
							"                \"distance_covered\",",
							"                \"mapmatched_coordinates\"",
							"            ],",
							"            \"properties\": {",
							"                \"trip_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"user_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"trip_start_time\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"trip_end_time\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"duration\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"distance_covered\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"mapmatched_coordinates\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"activity\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"modified\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Postman-Token",
						"value": "329aacca-1b81-410a-9d3e-bf18727e0051"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"trip_id\": \"{{trip_id}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/trips/enhanced/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"trips",
						"enhanced",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "user events",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "87c72cfe-8918-4552-8adc-f9a48e66d986",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"User events\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var user_id = pm.variables.get(\"user_id\");",
							"",
							"pm.test(\"event for given user_id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.events[0].user_id).to.deep.equal(user_id);",
							"});",
							"",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"events\",",
							"                \"geofences\"",
							"            ],",
							"            \"properties\": {",
							"                \"events\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"account_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"app_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"geofence_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"location_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"user_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"timezone_offset\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"event_type\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"geofences\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"account_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"project_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"geometry_type\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"geometry_radius\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"geometry_center\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"is_enabled\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"description\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"updated_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Postman-Token",
						"value": "c0326ed4-2d87-4bef-b3ec-b648c0bc1702",
						"disabled": true
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"disabled": true
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/user/{{user_id}}/event/?app_id={{app_id_android}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"user",
						"{{user_id}}",
						"event",
						""
					],
					"query": [
						{
							"key": "app_id",
							"value": "{{app_id_android}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Mapmatch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "447a5053-4e4e-4e61-b6a1-60ac9243ed75",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"get mapmatch success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"trip_id\",",
							"                \"user_id\",",
							"                \"trip_start_time\",",
							"                \"trip_end_time\",",
							"                \"duration\",",
							"                \"distance_covered\",",
							"                \"mapmatched_coordinates\"",
							"            ],",
							"            \"properties\": {",
							"                \"trip_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"user_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"trip_start_time\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"trip_end_time\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"duration\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"distance_covered\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"mapmatched_coordinates\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"activity\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"modified\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Postman-Token",
						"value": "837608ae-30ff-45e1-b2bf-9d29fb970324"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/trips/enhanced/?trip_id={{trip_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"trips",
						"enhanced",
						""
					],
					"query": [
						{
							"key": "trip_id",
							"value": "{{trip_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed event list api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b289711a-5cef-4e20-8d69-17b6b46d61e1",
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"exposed event list\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var user_id = pm.variables.get(\"user_id\");",
							"",
							"pm.test(\"event for given user_id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.events[0].user_id).to.deep.equal(user_id);",
							"});",
							"",
							"",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"account_id\",",
							"                \"events\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"events\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"user_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"geofence_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"location_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"app_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"event_type\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"timezone_offset\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/api/event/?user_id={{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"event",
						""
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{user_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "geofence event and user count",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dc884d93-efaa-42c7-bf52-09850227bd39",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Geofence events and user count\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"events_count\",",
							"                \"users_count\"",
							"            ],",
							"            \"properties\": {",
							"                \"events_count\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"users_count\": {",
							"                    \"type\": \"number\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "Postman-Token",
						"value": "d4a264e5-93cd-464f-8220-572d4acb31cb",
						"disabled": true
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"disabled": true
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/geofence/{{geofence_id}}/event/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"geofence",
						"{{geofence_id}}",
						"event",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "geofence events details",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "37e70bd5-4614-4d82-9806-79a8dcad49ad",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Geofence detail events\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var user_id = pm.variables.get(\"user_id\");",
							"",
							"pm.test(\"event for given user_id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.events[0].user_id).to.deep.equal(user_id);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"account_id\",",
							"                \"events\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"events\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"user_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"geofence_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"location_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"app_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"event_type\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"timezone_offset\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}"
					},
					{
						"key": "Postman-Token",
						"value": "eeb7b4e0-846e-4b8b-bb1d-d2752ffcc516",
						"disabled": true
					},
					{
						"key": "cache-control",
						"value": "no-cache",
						"disabled": true
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/geofence/{{geofence_id}}/event/?endpoint_type=GeofenceEventApi",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"geofence",
						"{{geofence_id}}",
						"event",
						""
					],
					"query": [
						{
							"key": "endpoint_type",
							"value": "GeofenceEventApi"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed Get Geofence filter list api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "475fc883-29e4-4229-be6b-484816eb11e7",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Exposed geofence filter\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"account_id\",",
							"                \"project_id\",",
							"                \"geofences\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"account_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"project_id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"geofences\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"geometry_type\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"geometry_radius\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"geometry_center\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"description\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"color_code\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"tag\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"updated_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/api/geofence/?geometry_type=circle&color_code=f44336&tag=work&page_number=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"geofence",
						""
					],
					"query": [
						{
							"key": "geometry_type",
							"value": "circle",
							"description": "(optional)"
						},
						{
							"key": "color_code",
							"value": "f44336",
							"description": "(optional)"
						},
						{
							"key": "tag",
							"value": "work",
							"description": "(optional)"
						},
						{
							"key": "page_number",
							"value": "1",
							"description": "(optional)"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete geofence",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "533b96a9-3ef1-4298-9d42-f7c9ad062d58",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Geofence deleted successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Geofence deleted successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Postman-Token",
						"value": "6b4550bd-d025-48f0-83cf-dea853ea30af"
					},
					{
						"key": "cache-control",
						"value": "no-cache"
					}
				],
				"body": {},
				"url": {
					"raw": "{{host}}/v1/geofence/{{geofence_id}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"geofence",
						"{{geofence_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "geofence tags api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "74528945-5096-4eca-bb94-5806d996f628",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"geofence tags api success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/geofence/{{project_id}}/tags/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"geofence",
						"{{project_id}}",
						"tags",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed create geofence",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4b788196-dac7-42fb-8c72-0bf048ec9aec",
						"exec": [
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Exposed create geofence\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Geofence Added successfully.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"exposed_geofence_id\", jsonData.data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"geometry_type\": \"polygon\",\n  \"coordinates\": [[ -72.28122, 42.926042 ], [ -72.2823209, 42.9250442 ], [ -72.2804648, 42.9243686 ], [ -72.2795207, 42.9254685 ], [ -72.2800592, 42.9261249 ], [ -72.28122, 42.926042 ]],\n  \"color_code\": \"00BFFF\",\n  \"tag\": \"Hotel\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/api/geofence/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"geofence",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed update Geofence api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f65f4bab-a3de-4588-8249-2953e899c851",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Exposed update geofence api\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Geofence updated successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"geofence_id\": \"{{exposed_geofence_id}}\",\n\t\"is_enabled\": true,\n\t\"description\": \"offical area\",\n\t\"tag\": \"Office\",\n\t\"color_code\": \"ffff\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/api/geofence/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"geofence",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposed Delete Geofence api",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90808680-20f0-4a53-8785-34dd04c0e087",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Exposed delete geofence api\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Geofence deleted successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Api-Key",
						"value": "{{secret_api_key}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"geofence_id\": \"{{exposed_geofence_id}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/api/geofence/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"api",
						"geofence",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get SDK users of each day in the given range",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "120a7bea-b034-4c63-b2c9-f58db9d1a596",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"SDK users\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"SDK users.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"android_active_users\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"android_inactive_users\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"ios_active_users\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"ios_inactive_users\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"date\": {",
							"                        \"type\": \"string\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f647b3c2-18b4-477f-a009-3c84eeffc29d",
						"exec": [
							"",
							"pm.environment.set(\"date\",(new Date()).toISOString().slice(0,10));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"disabled": false
					},
					{
						"key": "Authorization",
						"value": " token {{token}}",
						"disabled": false
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/user/{{project_id}}/?start_date={{date}}&end_date={{date}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"user",
						"{{project_id}}",
						""
					],
					"query": [
						{
							"key": "start_date",
							"value": "{{date}}"
						},
						{
							"key": "end_date",
							"value": "{{date}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get SDK User Details",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e6d9fbb9-8b3a-4d9f-8a79-6dba92f2e594",
						"exec": [
							"pm.environment.set(\"date\",(new Date()).toISOString().slice(0,10));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "45e8a45d-35dd-4ad8-8018-6351b67e520b",
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"SDK users details for given date.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"SDK users.\");",
							"});",
							"",
							"",
							"var user_id = pm.variables.get('user_id');",
							"",
							"pm.test(\"user_id validation\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.data.users[0].user_id).to.deep.equal(user_id);",
							"});",
							"",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"next_page\",",
							"                \"pages\",",
							"                \"prev_page\",",
							"                \"users\"",
							"            ],",
							"            \"properties\": {",
							"                \"pages\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"users\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"active\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"user_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"app_id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"app_platform\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"timezone_offset\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"coordinates\": {",
							"                                \"required\": [",
							"                                    \"type\",",
							"                                    \"coordinates\"",
							"                                ],",
							"                                \"properties\": {",
							"                                    \"type\": {",
							"                                        \"type\": \"string\"",
							"                                    },",
							"                                    \"coordinates\": {",
							"                                        \"type\": \"array\",",
							"                                        \"items\": {",
							"                                            \"type\": \"number\"",
							"                                        }",
							"                                    }",
							"                                },",
							"                                \"type\": \"object\"",
							"                            },",
							"                            \"description\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"activity\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"bat_stat\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"battery_remaining\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"recorded_at\": {",
							"                                \"type\": \"string\"",
							"                            }",
							"                        }",
							"                    }",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/user/{{project_id}}/?date={{date}}&page_number=1",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"user",
						"{{project_id}}",
						""
					],
					"query": [
						{
							"key": "date",
							"value": "{{date}}"
						},
						{
							"key": "page_number",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a443539f-b6ff-4895-b03e-de613545dacb",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"get accounts success.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"account_name\",",
							"                \"email\",",
							"                \"website\",",
							"                \"address_line1\",",
							"                \"address_line2\",",
							"                \"country\",",
							"                \"is_verified\",",
							"                \"pricing_per_user\",",
							"                \"members\",",
							"                \"created_at\",",
							"                \"updated_at\",",
							"                \"is_deleted\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"account_name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"email\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"website\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"address_line1\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"address_line2\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"country\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_verified\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"pricing_per_user\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"members\": {",
							"                    \"type\": \"array\",",
							"                    \"items\": {",
							"                        \"type\": \"object\",",
							"                        \"properties\": {",
							"                            \"id\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"full_name\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"avatar_url\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"timezone\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"email\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"currency\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"is_verified\": {",
							"                                \"type\": \"boolean\"",
							"                            },",
							"                            \"profile_type\": {",
							"                                \"type\": \"number\"",
							"                            },",
							"                            \"created_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"updated_at\": {",
							"                                \"type\": \"string\"",
							"                            },",
							"                            \"is_deleted\": {",
							"                                \"type\": \"boolean\"",
							"                            }",
							"                        }",
							"                    }",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_deleted\": {",
							"                    \"type\": \"boolean\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token  {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/accounts/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d328ee74-1e1c-48a7-9595-ee6f5529a6b0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Account updated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Account updated successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"address_line1\": \"Bangalore1\",\n    \"address_line2\": \"Bangalore2\",\n    \"country\": \"India\",\n    \"website\": \"https://www.jdssdcds.co\",\n    \"account_name\": \"Test_account\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/accounts/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create or edit profiles",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6e0a0cda-e1fb-4b23-8926-a6f0301fe4e1",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"profile_id\", jsonData.data.id);",
							"",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Profile added successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Profile added successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"email\": \"test_admin@mailinator.com\",\n\"profile_type\": 2\n}"
				},
				"url": {
					"raw": "{{host}}/v1/accounts/profiles/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"profiles",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Update profle",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d4243f0b-ec13-4d4a-843d-f851b9691cb0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Profile updated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Profile updated successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"full_name\": \"updated name\",\n\"avatar_url\": \"\",\n\"timezone\": \"Asia/Kolkata\",\n\"currency\": \"INR\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/accounts/profiles/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"profiles",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "244a4891-3874-4c54-8122-a4d776336e7a",
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"get profile success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"required\": [",
							"                \"id\",",
							"                \"full_name\",",
							"                \"avatar_url\",",
							"                \"timezone\",",
							"                \"email\",",
							"                \"currency\",",
							"                \"is_verified\",",
							"                \"profile_type\",",
							"                \"created_at\",",
							"                \"updated_at\",",
							"                \"is_deleted\"",
							"            ],",
							"            \"properties\": {",
							"                \"id\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"full_name\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"avatar_url\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"timezone\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"email\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"currency\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_verified\": {",
							"                    \"type\": \"boolean\"",
							"                },",
							"                \"profile_type\": {",
							"                    \"type\": \"number\"",
							"                },",
							"                \"created_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"updated_at\": {",
							"                    \"type\": \"string\"",
							"                },",
							"                \"is_deleted\": {",
							"                    \"type\": \"boolean\"",
							"                }",
							"            },",
							"            \"type\": \"object\"",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/accounts/profiles/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"profiles",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete profile",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9cbc6a80-b81e-4f7a-aac3-4735ff6d4abc",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Profile deleted successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Profile deleted successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "token {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"profile_id\": \"{{profile_id}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/accounts/profiles/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"profiles",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Daily active users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "523f3724-0b18-492b-9a39-728eb70787cc",
						"exec": [
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Daily active users\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"project\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"project_id\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"active_users\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/billing/analytics/active_users/{{project_id}}/?start_date={{date}}&end_date={{date}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"billing",
						"analytics",
						"active_users",
						"{{project_id}}",
						""
					],
					"query": [
						{
							"key": "start_date",
							"value": "{{date}}"
						},
						{
							"key": "end_date",
							"value": "{{date}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "generate bill",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "67758143-0ca0-4e94-9ca9-54903641fea8",
						"exec": [
							"",
							" var n = new Date().getMonth() + 1;",
							"",
							"pm.environment.set(\"month_only\", n);",
							"",
							"pm.environment.set(\"year_only\",(new Date()).getFullYear());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1b7bf1d8-fac7-41eb-8e9b-09b100633818",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"generate bill success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"var schema ={",
							"    \"required\": [",
							"        \"status\",",
							"        \"msg\",",
							"        \"code\",",
							"        \"data\"",
							"    ],",
							"    \"properties\": {",
							"        \"status\": {",
							"            \"type\": \"boolean\"",
							"        },",
							"        \"msg\": {",
							"            \"type\": \"string\"",
							"        },",
							"        \"code\": {",
							"            \"type\": \"number\"",
							"        },",
							"        \"data\": {",
							"            \"type\": \"array\",",
							"            \"items\": {",
							"                \"type\": \"object\",",
							"                \"properties\": {",
							"                    \"project\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"project_id\": {",
							"                        \"type\": \"string\"",
							"                    },",
							"                    \"monthly_active_users\": {",
							"                        \"type\": \"number\"",
							"                    },",
							"                    \"bill\": {",
							"                        \"type\": \"number\"",
							"                    }",
							"                }",
							"            }",
							"        }",
							"    }",
							"};",
							"",
							"pm.test('Schema is valid', function() {",
							"  pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/billing/?month={{month_only}}&year={{year_only}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"billing",
						""
					],
					"query": [
						{
							"key": "month",
							"value": "{{month_only}}"
						},
						{
							"key": "year",
							"value": "{{year_only}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get payment details",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "89141957-09a5-42a6-9033-0b5483eb0b33",
						"exec": [
							"",
							" var n = new Date().getMonth() + 1;",
							"",
							"pm.environment.set(\"month_only\", n);",
							"",
							"pm.environment.set(\"year_only\",(new Date()).getFullYear());"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "da084a5f-8dbd-4916-9000-ca71784c1602",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"get payment details success\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/billing/payment/details/?month={{month_only}}&year={{year_only}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"billing",
						"payment",
						"details",
						""
					],
					"query": [
						{
							"key": "month",
							"value": "{{month_only}}"
						},
						{
							"key": "year",
							"value": "{{year_only}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update android app",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7c06ec6a-c3f5-4b45-8ce2-354193cc3bea",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"App updated successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"App updated successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"updated android app\",\n\t\"package_name\":\"com.geosprk.dev\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/projects/{{project_id}}/apps/{{app_id_android}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"{{project_id}}",
						"apps",
						"{{app_id_android}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete android app",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f2a88dc-e816-4fb3-986b-1cfc75809f87",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"App deleted successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"App deleted successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/projects/{{project_id}}/apps/{{app_id_android}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"{{project_id}}",
						"apps",
						"{{app_id_android}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "914a08c6-23f2-4853-956a-2588549889ba",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Project deleted successfully.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Project deleted successfully.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/projects/{{project_id}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"projects",
						"{{project_id}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Forget Password",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb4a14a3-36df-4f73-b31e-060f6e628b2d",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"token\", jsonData.data.token);",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Password reset link sent.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Password reset link sent.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"email\": \"{{email_id}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/accounts/forget-password/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"forget-password",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "login Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cce4a644-1163-482a-bc2f-71af92b1a2dd",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"pm.environment.set(\"token\", jsonData.data.token);",
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Login successful.\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Login successful.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"email\": \"{{email_id}}\",\n\"password\": \"{{password}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/v1/accounts/login/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5ec5e133-9633-4b25-ba8d-705803e5f60e",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"logged out succesfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.msg).to.eql(\"Success.\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "token {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/v1/accounts/logout/",
					"host": [
						"{{host}}"
					],
					"path": [
						"v1",
						"accounts",
						"logout",
						""
					],
					"query": [
						{
							"key": "Content-Type",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "424ee346-b692-4f02-87ff-ad4ce2a95f63",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c5889c93-f97a-41d0-b94d-1aa6c16345bc",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}